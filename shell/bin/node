#!/bin/sh

# Node.js runner for Wanix MVP - VERSION 2
# Works around task filesystem issues by using /tmp

echo "=== NODE V2: Using /tmp workaround ===" >&2

if [ $# -lt 1 ]; then
    echo "Usage: node <script.js>" >&2
    exit 1
fi

# Read the script file
SCRIPT_FILE="$1"
if [ ! -f "$SCRIPT_FILE" ]; then
    echo "Error: File not found: $SCRIPT_FILE" >&2
    exit 1
fi

# Copy script to a known location that nodejs task will read
cp "$SCRIPT_FILE" /tmp/nodejs_script.js

# Create a nodejs task
echo "Creating Node.js task..." >&2
TASK_ID=$(cat /task/new/nodejs)
echo "Task ID: $TASK_ID" >&2

# Set the command to the temp file path
echo "/tmp/nodejs_script.js" > /tmp/nodejs_cmd

# Try to set cmd - this might fail but we'll continue
cat /tmp/nodejs_cmd > /task/$TASK_ID/cmd 2>/dev/null || {
    echo "Note: Could not set task cmd (expected)" >&2
}

# Start the task
echo "Starting task..." >&2
echo "start" > /task/$TASK_ID/ctl 2>/dev/null || {
    echo "ERROR: Failed to start task" >&2
    exit 1
}

# Connect output streams
(
    while true; do
        cat /task/$TASK_ID/fd/1 2>/dev/null || break
    done
) &
STDOUT_PID=$!

(
    while true; do
        cat /task/$TASK_ID/fd/2 2>/dev/null >&2 || break  
    done
) &
STDERR_PID=$!

# Wait for task to complete
sleep 2  # Give it time to run

# Kill the output copying processes
kill $STDOUT_PID $STDERR_PID 2>/dev/null

# Try to get exit code
EXIT_CODE=$(cat /task/$TASK_ID/exit 2>/dev/null || echo "0")

# Clean up
rm -f /tmp/nodejs_script.js /tmp/nodejs_cmd

exit $EXIT_CODE